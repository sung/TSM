[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 TSM authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sung Gong. Author, maintainer. Gordon Smith. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gong S, Smith G (2023). TSM: Smith Method. R package version 0.0.0.9000, https://github.com/sung/TSM.","code":"@Manual{,   title = {TSM: The Smith Method},   author = {Sung Gong and Gordon Smith},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/sung/TSM}, }"},{"path":"/index.html","id":"tsm","dir":"","previous_headings":"","what":"The Smith Method","title":"The Smith Method","text":"package, TSM (aka. Smith Method), select desired number features (4 default) purposefully dropping highly correlated ones, .e, picking highly representative features can best explain binary outcomes. plain English, works like follwoing: first representative feature one shows highest AUC (Area ROC Curve) features. next representative feature one shows highest AUC remaing features dropping highly correlated features first representative feature. third, fourth, , represenative feature picked way 2nd picked . default, spearman correlation coefficient used check correlation among possible features dropped certain threshold (e.g. 0.5) leaving represenative one best AUC. recursively checks correlations drops feature nothing left check. default, thresholds correlation coefficients set 0.1 (.e. highly stringent leaving less features) 0.7 (.e. less stringent leaving features) increasing 0.1 step.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"The Smith Method","text":"can install development version TSM like :","code":"devtools::install_github(\"sung/TSM\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"The Smith Method","text":"input file features columns, including outcome column (y default) contains binary outcome, either 0 1. example: shown , TSM returns table (data.table) descending order Leave-Pair--Cross-Validation (LPOCV) Gordon J Epi 2014 threshold correlation coefficients. case ’d like verbose version outcomes:","code":"library(TSM) input=read.csv(system.file(\"extdata\",\"demo_input.csv\",package=\"TSM\")) # read the example input from TSM  input[1:5,] #>       F1     F2     F3     F4     F5     F6     F7     F8     F9    F10    F11 #> 1 3.0978 5.3539 3.4697 3.3862 6.5225 1.3523 1.4245 2.2792 0.5276 2.6810 2.4484 #> 2 3.1000 5.6593 3.7335 3.2010 6.9357 1.2460 1.6861 2.3034 0.7733 2.6492 2.4600 #> 3 3.6803 5.4233 3.8745 3.3044 5.7258 1.1525 1.3389 2.2688 0.4059 2.6794 1.6202 #> 4 3.0374 5.7566 3.4998 3.2889 6.0595 1.4913 1.5907 2.1947 0.3826 1.4088 1.3074 #> 5 3.3356 5.0057 3.1617 3.0673 5.0654 0.7485 1.1178 1.6380 0.3623 1.7394 1.2593 #>      F12    F13    F14     F15    F16    F17    F18    F19    F20    F21 y #> 1 1.7607 1.6585 2.5810 -2.5896 8.4015 3.5893 3.2906 2.0396 1.0402 7.9531 1 #> 2 1.7252 1.3809 2.6356 -1.0027 8.3084 3.7016 3.9182 2.4075 0.7266 8.2472 1 #> 3 1.1248 1.0232 1.8736 -2.8647 8.3134 2.6569 3.7619 2.0328 0.8711 7.9282 0 #> 4 1.7147 1.2212 2.2696 -1.1208 8.0433 3.6225 3.6321 2.2341 0.9412 7.8447 1 #> 5 1.6505 0.8490 1.7405 -2.0821 7.4438 2.6039 2.0825 0.4843 0.5597 7.6459 1 TSM(x=input) # run TSM with default parameters #> calculating AUC for each features... #> cor0.1 #> cor0.2 #> cor0.3 #> cor0.4 #> cor0.5 #> cor0.6 #> cor0.7 #>    Cor Num features                                                 Features #> 1: 0.4            4                                             F1,F7,F8,F14 #> 2: 0.5            7                                  F1,F7,F13,F8,F9,F14,F15 #> 3: 0.7           16 F1,F4,F6,F5,F7,F13,F8,F9,F12,F11,F14,F15,F21,F17,F18,F20 #> 4: 0.6           11                   F1,F5,F7,F13,F8,F9,F14,F15,F21,F17,F18 #> 5: 0.1            1                                                       F1 #> 6: 0.2            1                                                       F1 #> 7: 0.3            1                                                       F1 #>    Best features      AIC      BIC       AUC AUC(LPOCV) #> 1:  F1,F7,F8,F14 106.9498 120.8872 0.8815629  0.8659951 #> 2:  F1,F7,F13,F8 108.8605 122.7980 0.8806471  0.8580586 #> 3:   F1,F4,F6,F5 111.8757 125.8131 0.8684371  0.8489011 #> 4:  F1,F5,F7,F13 111.5937 125.5312 0.8666056  0.8476801 #> 5:            F1 113.1852 118.7602 0.8446276  0.8446276 #> 6:            F1 113.1852 118.7602 0.8446276  0.8446276 #> 7:            F1 113.1852 118.7602 0.8446276  0.8446276  TSM(x=input, corr=c(0.4, 0.5)) # two correlation coefficients only  #> calculating AUC for each features... #> cor0.4 #> cor0.5 #>    Cor Num features                Features Best features      AIC      BIC #> 1: 0.4            4            F1,F7,F8,F14  F1,F7,F8,F14 106.9498 120.8872 #> 2: 0.5            7 F1,F7,F13,F8,F9,F14,F15  F1,F7,F13,F8 108.8605 122.7980 #>          AUC AUC(LPOCV) #> 1: 0.8815629  0.8659951 #> 2: 0.8806471  0.8580586  TSM(x=input, corr=c(0.4, 0.5),k=3) # two correlation coefficients and three features only  #> calculating AUC for each features... #> cor0.4 #> cor0.5 #>    Cor Num features                Features Best features      AIC      BIC #> 1: 0.4            4            F1,F7,F8,F14      F1,F7,F8 107.8816 119.0316 #> 2: 0.5            7 F1,F7,F13,F8,F9,F14,F15     F1,F7,F13 109.9227 121.0727 #>          AUC AUC(LPOCV) #> 1: 0.8751526  0.8635531 #> 2: 0.8659951  0.8528694  TSM(x=input, corr=c(0.4, 0.5),k=3,method=\"pearson\") # pearson method   #> calculating AUC for each features... #> cor0.4 #> cor0.5 #>    Cor Num features       Features Best features      AIC      BIC       AUC #> 1: 0.5            4 F1,F13,F15,F18    F1,F13,F15 107.7559 118.9058 0.8736264 #> 2: 0.4            3     F1,F11,F14    F1,F11,F14 109.9812 121.1312 0.8672161 #>    AUC(LPOCV) #> 1:  0.8574481 #> 2:  0.8489011 foo<-TSM(x=input,corr=c(0.4,0.5),k=3,verbose=T) #> calculating AUC for each features... #> cor0.4 #> cor0.5  foo[[\"cor0.4\"]] #> $top.rank #> [1] \"F1\"  \"F7\"  \"F8\"  \"F14\" #>  #> $cor #>  [1] \"F1\"  \"F2\"  \"F3\"  \"F4\"  \"F5\"  \"F6\"  \"F9\"  \"F10\" \"F11\" \"F12\" \"F13\" \"F15\" #> [13] \"F16\" \"F17\" \"F18\" \"F19\" \"F21\" \"F7\"  \"F8\"  \"F14\" #>  #> $num.cor #> [1] 17  1  1  1 #>  #> $fit #>  #> Call:  glm(formula = y ~ ., family = \"binomial\", data = my.data) #>  #> Coefficients: #> (Intercept)           F1           F7           F8   #>      15.134       -2.530       -2.577       -1.531   #>  #> Degrees of Freedom: 119 Total (i.e. Null);  116 Residual #> Null Deviance:       155.4  #> Residual Deviance: 99.88     AIC: 107.9 foo[[\"cor0.5\"]] #> $top.rank #> [1] \"F1\"  \"F7\"  \"F13\" \"F8\"  \"F9\"  \"F14\" \"F15\" #>  #> $cor #>  [1] \"F1\"  \"F2\"  \"F3\"  \"F4\"  \"F5\"  \"F6\"  \"F10\" \"F12\" \"F16\" \"F17\" \"F19\" \"F7\"  #> [13] \"F18\" \"F11\" \"F13\" \"F8\"  \"F9\"  \"F21\" \"F14\" \"F15\" #>  #> $num.cor #> [1] 11  2  2  1  2  1  1 #>  #> $fit #>  #> Call:  glm(formula = y ~ ., family = \"binomial\", data = my.data) #>  #> Coefficients: #> (Intercept)           F1           F7          F13   #>      14.162       -2.756       -2.368       -1.268   #>  #> Degrees of Freedom: 119 Total (i.e. Null);  116 Residual #> Null Deviance:       155.4  #> Residual Deviance: 101.9     AIC: 109.9  data.table::rbindlist(foo[[\"performance\"]])[order(-`AUC(LPOCV)`)] #>    Cor Num features                Features Best features      AIC      BIC #> 1: 0.4            4            F1,F7,F8,F14      F1,F7,F8 107.8816 119.0316 #> 2: 0.5            7 F1,F7,F13,F8,F9,F14,F15     F1,F7,F13 109.9227 121.0727 #>          AUC AUC(LPOCV) #> 1: 0.8751526  0.8635531 #> 2: 0.8659951  0.8528694"},{"path":"/reference/TSM.html","id":null,"dir":"Reference","previous_headings":"","what":"The Smith Method — TSM","title":"The Smith Method — TSM","text":"function TSM (aka. Smith Method) selects desired number features (4 default) purposefully dropping highly correlated features, .e, picking set representative features can best explain binary outcomes. plain language, works like follwoing: first representative feature one shows highest AUC (Area ROC Curve) features. next representative feature one shows highest AUC remaing features dropping highly correlated features first representative feature. third, fourth, , represenative feature picked way 2nd picked .","code":""},{"path":"/reference/TSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Smith Method — TSM","text":"","code":"TSM(x, method = \"spearman\", corr = seq(0.1, 0.7, by = 0.1), k = 4, verbose = F)"},{"path":"/reference/TSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Smith Method — TSM","text":"x Path input file method Character either pearson (default) spearman, paramter method cor(). corr numeric vector thresholds correlation coefficients. verbose Boolean","code":""},{"path":"/reference/TSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Smith Method — TSM","text":"data.table (default) list data.table (verbose=T)","code":""},{"path":"/reference/TSM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Smith Method — TSM","text":"","code":"input=read.csv(system.file(\"extdata\",\"demo_input.csv\",package=\"TSM\")) # read the example input  TSM(x=input) # run TSM with default parameters #> calculating AUC for each features... #> cor0.1 #> cor0.2 #> cor0.3 #> cor0.4 #> cor0.5 #> cor0.6 #> cor0.7 #>    Cor Num features                                                 Features #> 1: 0.4            4                                             F1,F7,F8,F14 #> 2: 0.5            7                                  F1,F7,F13,F8,F9,F14,F15 #> 3: 0.7           16 F1,F4,F6,F5,F7,F13,F8,F9,F12,F11,F14,F15,F21,F17,F18,F20 #> 4: 0.6           11                   F1,F5,F7,F13,F8,F9,F14,F15,F21,F17,F18 #> 5: 0.1            1                                                       F1 #> 6: 0.2            1                                                       F1 #> 7: 0.3            1                                                       F1 #>    Best features      AIC      BIC       AUC AUC(LPOCV) #> 1:  F1,F7,F8,F14 106.9498 120.8872 0.8815629  0.8659951 #> 2:  F1,F7,F13,F8 108.8605 122.7980 0.8806471  0.8580586 #> 3:   F1,F4,F6,F5 111.8757 125.8131 0.8684371  0.8489011 #> 4:  F1,F5,F7,F13 111.5937 125.5312 0.8666056  0.8476801 #> 5:            F1 113.1852 118.7602 0.8446276  0.8446276 #> 6:            F1 113.1852 118.7602 0.8446276  0.8446276 #> 7:            F1 113.1852 118.7602 0.8446276  0.8446276  TSM(x=input, corr=c(0.4, 0.5)) # two correlation coefficients only  #> calculating AUC for each features... #> cor0.4 #> cor0.5 #>    Cor Num features                Features Best features      AIC      BIC #> 1: 0.4            4            F1,F7,F8,F14  F1,F7,F8,F14 106.9498 120.8872 #> 2: 0.5            7 F1,F7,F13,F8,F9,F14,F15  F1,F7,F13,F8 108.8605 122.7980 #>          AUC AUC(LPOCV) #> 1: 0.8815629  0.8659951 #> 2: 0.8806471  0.8580586  TSM(x=input, method=\"pearson\") # pearson method for cor() #> calculating AUC for each features... #> cor0.1 #> cor0.2 #> cor0.3 #> cor0.4 #> cor0.5 #> cor0.6 #> cor0.7 #>    Cor Num features                                           Features #> 1: 0.6            9                    F1,F7,F13,F8,F9,F16,F14,F15,F17 #> 2: 0.5            4                                     F1,F13,F15,F18 #> 3: 0.4            3                                         F1,F11,F14 #> 4: 0.7           14 F1,F5,F7,F13,F8,F9,F12,F11,F14,F15,F21,F17,F18,F20 #> 5: 0.1            1                                                 F1 #> 6: 0.2            1                                                 F1 #> 7: 0.3            1                                                 F1 #>     Best features      AIC      BIC       AUC AUC(LPOCV) #> 1:   F1,F7,F13,F8 108.8605 122.7980 0.8806471  0.8580586 #> 2: F1,F13,F15,F18 108.2224 122.1599 0.8717949  0.8522589 #> 3:     F1,F11,F14 109.9812 121.1312 0.8672161  0.8489011 #> 4:   F1,F5,F7,F13 111.5937 125.5312 0.8666056  0.8476801 #> 5:             F1 113.1852 118.7602 0.8446276  0.8446276 #> 6:             F1 113.1852 118.7602 0.8446276  0.8446276 #> 7:             F1 113.1852 118.7602 0.8446276  0.8446276"},{"path":"/reference/get_LPOCV.html","id":null,"dir":"Reference","previous_headings":"","what":"Leave Pair Out Cross Validation — get_LPOCV","title":"Leave Pair Out Cross Validation — get_LPOCV","text":"function returns optimism-adjusted c-stat. Read Gordon J Epi 2014.","code":""},{"path":"/reference/get_LPOCV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leave Pair Out Cross Validation — get_LPOCV","text":"","code":"get_LPOCV(x)"},{"path":"/reference/get_LPOCV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leave Pair Out Cross Validation — get_LPOCV","text":"x data.frame","code":""},{"path":"/reference/get_LPOCV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leave Pair Out Cross Validation — get_LPOCV","text":"numeric value LPOCV","code":""},{"path":"/reference/get_LPOCV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Leave Pair Out Cross Validation — get_LPOCV","text":"","code":"input=read.csv(system.file(\"extdata\",\"demo_input.csv\",package=\"TSM\")) # read the example input  get_LPOCV(x=input[,c(\"F1\",\"y\")]) # get LPOCV of \"F1\" as a sole predictor #>      TRUE  #> 0.8446276   get_LPOCV(x=input[,c(\"F1\",\"F2\",\"y\")]) # get LPOCV of \"F1\" and \"F2\" as two predictors #>      TRUE  #> 0.8501221"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/news/index.html","id":"tsm-0009000","dir":"Changelog","previous_headings":"","what":"TSM 0.0.0.9000","title":"TSM 0.0.0.9000","text":"initially release minimum working example.","code":""}]
